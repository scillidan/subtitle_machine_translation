1
00:00:01,439 --> 00:00:03,040
你一定听说过一些很酷的事情

2
00:00:03,040 --> 00:00:05,279
黑暗的桌子 你决定试一试

3
00:00:05,279 --> 00:00:09,120
你装上你的第一个俘虏 然后等待

4
00:00:09,120 --> 00:00:12,080
天空是粉色的 c是粉色的 

5
00:00:12,080 --> 00:00:14,639
桌子是垃圾 太阳明明是

6
00:00:14,639 --> 00:00:17,199
黄色 如此2D图所示

7
00:00:17,199 --> 00:00:18,960
那么 为什么黑暗的桌子会让太阳

8
00:00:18,960 --> 00:00:21,680
粉色 我们能做些什么来修复它

9
00:00:21,680 --> 00:00:24,240
粉红色区域最常见的罪魁祸首是

10
00:00:24,240 --> 00:00:27,039
你的俘虏是

11
00:00:27,039 --> 00:00:29,679
突出显示传感器上的剪裁

12
00:00:29,679 --> 00:00:31,359
这就是当你也有了

13
00:00:31,359 --> 00:00:32,960
在阳光下很有趣

14
00:00:32,960 --> 00:00:34,960
您捕获的部分数据命中了

15
00:00:34,960 --> 00:00:37,200
传感器的上限和

16
00:00:37,200 --> 00:00:40,160
传感器说 是的 我写满了

17
00:00:40,160 --> 00:00:43,440
所有这些区域的最大值

18
00:00:43,440 --> 00:00:46,079
当我们加载摄像机本机数据文件时

19
00:00:46,079 --> 00:00:48,800
也被称为生黑餐桌

20
00:00:48,800 --> 00:00:51,199
我们应用特定的流程

21
00:00:51,199 --> 00:00:53,920
这样我们就可以将捕捉到的数据可视化

22
00:00:53,920 --> 00:00:55,920
我要试着调查一下为什么

23
00:00:55,920 --> 00:00:58,399
亮点变成粉色 所以请耐心听我说

24
00:00:58,399 --> 00:01:00,399
跳到视频中我所在的章节

25
00:01:00,399 --> 00:01:04,160
尝试修复粉色高光

26
00:01:05,840 --> 00:01:07,520
让我们假设这是我们的俘虏

27
00:01:07,520 --> 00:01:10,320
有点过度曝光 我会禁用所有

28
00:01:10,320 --> 00:01:12,479
我可以禁用的模块

29
00:01:12,479 --> 00:01:14,799
所以我们可以一步一步地看到正在发生的事情

30
00:01:14,799 --> 00:01:16,159
步骤

31
00:01:16,159 --> 00:01:18,720
我还打算跳过马赛克 因为

32
00:01:18,720 --> 00:01:21,680
这让我们有点失控

33
00:01:21,680 --> 00:01:22,799
和

34
00:01:22,799 --> 00:01:24,799
我要把未加工的黑白相间

35
00:01:24,799 --> 00:01:27,119
点对点通过

36
00:01:27,119 --> 00:01:29,280
现在我们可以从

37
00:01:29,280 --> 00:01:30,400
自下而上

38
00:01:30,400 --> 00:01:31,920
在这一点上 我们几乎是

39
00:01:31,920 --> 00:01:34,320
将原始数据中的数据值可视化

40
00:01:34,320 --> 00:01:36,320
文件

41
00:01:36,320 --> 00:01:38,799
如果我们放大到一个愚蠢的百分比

42
00:01:38,799 --> 00:01:41,200
可以看到照相点图案

43
00:01:41,200 --> 00:01:43,759
每个PhotoSite包含一个数字

44
00:01:43,759 --> 00:01:45,200
价值

45
00:01:45,200 --> 00:01:47,280
现在 如果我们看一下原始的黑色

46
00:01:47,280 --> 00:01:49,680
白点模块我们可以看到

47
00:01:49,680 --> 00:01:53,119
最大感光值

48
00:01:53,119 --> 00:01:55,759
三个65535得到一个白色正方形和

49
00:01:55,759 --> 00:01:57,759
最低值为零

50
00:01:57,759 --> 00:01:59,759
得到一个黑色正方形

51
00:01:59,759 --> 00:02:02,240
我们在这一点上的方块是一定的

52
00:02:02,240 --> 00:02:04,240
灰色阴影 因为我们没有使用

53
00:02:04,240 --> 00:02:06,640
从0到6的整个范围

54
00:02:06,640 --> 00:02:08,720
五五65535

55
00:02:08,720 --> 00:02:10,800
我用来拍摄的相机只能

56
00:02:10,800 --> 00:02:13,200
写入14位数据文件

57
00:02:13,200 --> 00:02:16,160
这意味着最大值为

58
00:02:16,160 --> 00:02:18,080
16383

59
00:02:18,080 --> 00:02:19,760
如果我将滑块拖回

60
00:02:19,760 --> 00:02:23,599
制造商推荐值为16 300

61
00:02:23,599 --> 00:02:25,200
您会注意到 我们只是

62
00:02:25,200 --> 00:02:28,000
标记我们有用的数据的结束位置和

63
00:02:28,000 --> 00:02:30,800
从哪里开始

64
00:02:34,400 --> 00:02:36,640
如果我重置此模块 这些值将

65
00:02:36,640 --> 00:02:38,480
根据他们来的相机而定

66
00:02:38,480 --> 00:02:40,080
从…

67
00:02:40,080 --> 00:02:41,840
现在我们要迈出的一步是

68
00:02:41,840 --> 00:02:44,319
这会让人有点困惑

69
00:02:44,319 --> 00:02:46,720
因为我们知道裸露的滤镜模式

70
00:02:46,720 --> 00:02:49,760
对于我们的传感器 我们可以提供这些值

71
00:02:49,760 --> 00:02:52,160
我会给他们一种随意的颜色

72
00:02:52,160 --> 00:02:54,480
不同的颜色 而不是绿红

73
00:02:54,480 --> 00:02:56,400
和蓝色 但我别无选择

74
00:02:56,400 --> 00:02:59,840
这一点 就是这里

75
00:03:00,560 --> 00:03:01,599
记住

76
00:03:01,599 --> 00:03:04,080
我们不能从

77
00:03:04,080 --> 00:03:05,840
单值 这只是一个

78
00:03:05,840 --> 00:03:08,000
可视化彩色图表 如果您

79
00:03:08,000 --> 00:03:10,239
你会注意到每一秒

80
00:03:10,239 --> 00:03:12,480
广场是绿色的 这是拜耳

81
00:03:12,480 --> 00:03:14,879
传感器的图案 它被称为

82
00:03:14,879 --> 00:03:18,319
CFA颜色过滤阵列最多

83
00:03:18,319 --> 00:03:22,000
常见的是红、绿、绿、蓝 为什么

84
00:03:22,000 --> 00:03:23,760
绿色方块比红色方块多

85
00:03:23,760 --> 00:03:27,040
和蓝色布莱斯熊的专利图案

86
00:03:27,040 --> 00:03:29,599
包括一个额外的绿色过滤器

87
00:03:29,599 --> 00:03:32,640
每个红色、绿色和蓝色滤镜都要模仿

88
00:03:32,640 --> 00:03:35,040
人眼的生理学

89
00:03:35,040 --> 00:03:38,480
使用m和L圆锥体感知亮度

90
00:03:38,480 --> 00:03:41,760
它们对绿光最敏感

91
00:03:41,760 --> 00:03:43,840
那么 我们如何才能从

92
00:03:43,840 --> 00:03:45,920
这些方块 首先我们需要

93
00:03:45,920 --> 00:03:47,040
脱债人

94
00:03:47,040 --> 00:03:49,840
这是我们马赛克的同义词

95
00:03:49,840 --> 00:03:51,599
有相当多的算法可供选择

96
00:03:51,599 --> 00:03:52,480
从…

97
00:03:52,480 --> 00:03:55,360
简而言之 就是从

98
00:03:55,360 --> 00:03:59,200
相邻正方形和近似值

99
00:03:59,200 --> 00:04:01,280
因此 我们不是每平方一个值

100
00:04:01,280 --> 00:04:04,159
想要每平方有三个值

101
00:04:04,159 --> 00:04:05,920
三是这里的神奇数字 因为

102
00:04:05,920 --> 00:04:08,400
巧合的是 我们最终会得到三个

103
00:04:08,400 --> 00:04:11,519
使图像变为红绿的通道

104
00:04:11,519 --> 00:04:12,560
和蓝色

105
00:04:12,560 --> 00:04:15,120
也称为RGB

106
00:04:15,120 --> 00:04:17,120
但现在我们仍然逍遥法外

107
00:04:17,120 --> 00:04:19,279
数字土地

108
00:04:19,279 --> 00:04:21,680
现在让我们做马赛克 我们将使用一个

109
00:04:21,680 --> 00:04:24,080
去杠杆算法 但不会

110
00:04:24,080 --> 00:04:26,080
考虑到我们有更多的

111
00:04:26,080 --> 00:04:29,440
绿色正方形比红色和蓝色正方形

112
00:04:29,440 --> 00:04:31,520
我们只想获得三个值 每个

113
00:04:31,520 --> 00:04:34,560
平方而不是每个值一个 我将

114
00:04:34,560 --> 00:04:37,120
选择RCD作为马赛克王 因为

115
00:04:37,120 --> 00:04:38,560
这是默认设置

116
00:04:38,560 --> 00:04:42,000
在这里 它就像是我们平均

117
00:04:42,000 --> 00:04:44,560
所有的方块都以一种奇特的方式

118
00:04:44,560 --> 00:04:47,199
中数据的流畅可视化

119
00:04:47,199 --> 00:04:49,600
原始文件是唯一缺失的文件

120
00:04:49,600 --> 00:04:52,000
现在是要考虑到我们有

121
00:04:52,000 --> 00:04:54,479
绿色方块比红色和蓝色多

122
00:04:54,479 --> 00:04:56,400
我们需要把三个方格按比例排列

123
00:04:56,400 --> 00:04:58,400
相应的价值

124
00:04:58,400 --> 00:05:00,000
我将手动执行此操作

125
00:05:00,000 --> 00:05:03,360
最大的效果 那就是灵光一现

126
00:05:03,360 --> 00:05:06,639
但最好将此模块保持在D65

127
00:05:06,639 --> 00:05:08,400
注意每件事看起来都是怎样的

128
00:05:08,400 --> 00:05:09,280
绿色

129
00:05:09,280 --> 00:05:11,600
除了太阳和云彩

130
00:05:11,600 --> 00:05:13,199
它们看起来都是白色的

131
00:05:13,199 --> 00:05:14,720
请记住这一点

132
00:05:14,720 --> 00:05:16,320
现在看看当我移动

133
00:05:16,320 --> 00:05:18,880
调整滑块的颜色并减少预览

134
00:05:18,880 --> 00:05:21,440
绿色和更粉色

135
00:05:21,440 --> 00:05:24,639
当我将色调滑块移向粉色时

136
00:05:24,639 --> 00:05:27,280
视觉上的绿色区域走向

137
00:05:27,280 --> 00:05:28,240
白色

138
00:05:28,240 --> 00:05:30,800
视觉上的白色区域向

139
00:05:30,800 --> 00:05:32,320
粉色

140
00:05:32,320 --> 00:05:34,240
因为这个操作仍然是简单的

141
00:05:34,240 --> 00:05:36,560
数学运算 而不是在

142
00:05:36,560 --> 00:05:39,600
显示的颜色空间或约束

143
00:05:39,600 --> 00:05:43,520
我们能够得到大于1或255的值

144
00:05:43,520 --> 00:05:45,520
因为我们执行这些操作

145
00:05:45,520 --> 00:05:47,919
非破坏性的

146
00:05:47,919 --> 00:05:50,479
在以后的管道中 我们将使用这些

147
00:05:50,479 --> 00:05:53,280
重视并将它们带入一个色域

148
00:05:53,280 --> 00:05:56,000
最后给他们尝试刺激的意义

149
00:05:56,000 --> 00:05:58,960
简单地说 我们终于在RGB中了

150
00:05:58,960 --> 00:06:01,520
土地和我们的价值观开始站稳脚跟

151
00:06:01,520 --> 00:06:02,880
含义

152
00:06:02,880 --> 00:06:04,639
从技术上讲 这件事发生得早了一点

153
00:06:04,639 --> 00:06:06,400
因为我不能把模块

154
00:06:06,400 --> 00:06:09,120
你可以想象一下 直到输入

155
00:06:09,120 --> 00:06:11,280
颜色配置文件模块一切都是黑色的

156
00:06:11,280 --> 00:06:14,000
和我们还没有应用的白人价值观

157
00:06:14,000 --> 00:06:16,160
任何意义上的

158
00:06:16,160 --> 00:06:18,000
很好 我们手动生成了ping

159
00:06:18,000 --> 00:06:19,840
亮点 现在我们知道它不是

160
00:06:19,840 --> 00:06:22,319
什么东西被打破的结果 但一个

161
00:06:22,319 --> 00:06:24,960
非破坏性的结果

162
00:06:24,960 --> 00:06:26,479
就这样

163
00:06:26,479 --> 00:06:29,039
让我重新设置不幸的呼叫

164
00:06:29,039 --> 00:06:31,759
白平衡模块的默认和

165
00:06:31,759 --> 00:06:33,680
让我启用颜色校准

166
00:06:33,680 --> 00:06:35,440
模块也是如此

167
00:06:35,440 --> 00:06:37,440
对了 是时候做点什么了

168
00:06:37,440 --> 00:06:40,240
那粉色的天空

169
00:06:40,800 --> 00:06:43,039
让我们首先假设我们的默认电影

170
00:06:43,039 --> 00:06:44,800
RGB工作流

171
00:06:44,800 --> 00:06:47,120
我将移动到重建选项卡 因为我

172
00:06:47,120 --> 00:06:48,960
将需要重建这些区域

173
00:06:48,960 --> 00:06:51,120
在传感器上被夹住了

174
00:06:51,120 --> 00:06:53,520
我将启用蒙版预览

175
00:06:53,520 --> 00:06:55,599
因为选择区域很重要

176
00:06:55,599 --> 00:06:58,080
我们正在努力

177
00:06:58,080 --> 00:06:59,599
现在它是黑色的

178
00:06:59,599 --> 00:07:02,639
因为未选择任何内容

179
00:07:02,639 --> 00:07:04,400
我会走回门槛滑块

180
00:07:04,400 --> 00:07:07,039
直到我看到过度曝光的区域

181
00:07:07,039 --> 00:07:09,360
白色

182
00:07:11,599 --> 00:07:13,680
我会调整过渡 这样我就可以

183
00:07:13,680 --> 00:07:15,360
几乎可以看到里面的其他物体

184
00:07:15,360 --> 00:07:17,840
这张照片

185
00:07:23,520 --> 00:07:26,319
现在是重建比特

186
00:07:26,319 --> 00:07:28,639
我已经看过这些滑块了

187
00:07:28,639 --> 00:07:30,560
他们在另外两个视频中做了什么 我

188
00:07:30,560 --> 00:07:32,319
将链接到描述中

189
00:07:32,319 --> 00:07:34,000
现在我会掩饰他们的

190
00:07:34,000 --> 00:07:34,960
功能

191
00:07:34,960 --> 00:07:37,759
当我寻找最好的结果时

192
00:07:37,759 --> 00:07:40,479
我们可以把面具关掉

193
00:07:40,479 --> 00:07:42,400
对于第一个滑块 让我们保持

194
00:07:42,400 --> 00:07:44,240
中间的重建技术

195
00:07:44,240 --> 00:07:47,360
第二 在结构和纹理之间

196
00:07:47,360 --> 00:07:48,479
滑块

197
00:07:48,479 --> 00:07:50,800
我会尝试重建 而不是

198
00:07:50,800 --> 00:07:53,120
先开花是因为我觉得

199
00:07:53,120 --> 00:07:55,039
足够的细节来进行一些重建

200
00:07:55,039 --> 00:07:57,520
在那里的亮点和一如既往的我

201
00:07:57,520 --> 00:08:01,520
将在最后一个滑块上变为全灰色

202
00:08:01,520 --> 00:08:03,840
我们的颜色信息被破坏 因为

203
00:08:03,840 --> 00:08:05,840
剪裁 我不会费心

204
00:08:05,840 --> 00:08:08,400
保留一些我不关心的东西

205
00:08:08,400 --> 00:08:09,520
全粒性

206
00:08:09,520 --> 00:08:12,000
好的 我们还有粉色的天空和粉色

207
00:08:12,000 --> 00:08:12,879
C

208
00:08:12,879 --> 00:08:15,199
这意味着我们的门槛太高了

209
00:08:15,199 --> 00:08:16,639
高

210
00:08:16,639 --> 00:08:21,199
我会稍微往回走一走

211
00:08:22,080 --> 00:08:25,120
直到它完全消失

212
00:08:25,120 --> 00:08:27,599
好的 看起来好多了 但我能感觉到

213
00:08:27,599 --> 00:08:29,919
看起来有点刺耳 但还是让我们试着

214
00:08:29,919 --> 00:08:31,599
更喜欢开花 而不是

215
00:08:31,599 --> 00:08:34,599
重建

216
00:08:41,200 --> 00:08:42,640
好了 我们走吧

217
00:08:42,640 --> 00:08:45,360
精致流畅 我们甚至可以增加

218
00:08:45,360 --> 00:08:47,920
白色相对曝光量小一点

219
00:08:47,920 --> 00:08:50,240
这可能会给我们带来一点

220
00:08:50,240 --> 00:08:53,560
粉色亮点

221
00:08:54,240 --> 00:08:56,160
但我们可以通过以下方式再次解决这个问题

222
00:08:56,160 --> 00:08:59,360
调整门槛

223
00:09:00,000 --> 00:09:01,279
好了 我们走吧

224
00:09:01,279 --> 00:09:04,000
问题已解决

225
00:09:04,640 --> 00:09:06,320
通常情况下 我们并不需要

226
00:09:06,320 --> 00:09:08,880
例如 我想使用胶片RGB

227
00:09:08,880 --> 00:09:11,040
出口废气以与其他产品一起使用

228
00:09:11,040 --> 00:09:12,160
软件

229
00:09:12,160 --> 00:09:15,279
如果我们关闭胶片色彩平衡RGB

230
00:09:15,279 --> 00:09:16,959
颜色校准

231
00:09:16,959 --> 00:09:20,320
我们又一次以PING亮点结束

232
00:09:20,320 --> 00:09:22,000
但不要担心 因为我们有一个

233
00:09:22,000 --> 00:09:23,760
重点

234
00:09:23,760 --> 00:09:27,040
建造模块

235
00:09:27,600 --> 00:09:29,600
让我们把它打开

236
00:09:29,600 --> 00:09:32,240
我会清除搜索词

237
00:09:32,240 --> 00:09:34,240
现在我们有了最基本的方法

238
00:09:34,240 --> 00:09:36,800
启用 称为剪辑高亮显示

239
00:09:36,800 --> 00:09:38,560
在我们调整好照片的尺寸后

240
00:09:38,560 --> 00:09:41,519
值 并且如果有任何值超过我们的

241
00:09:41,519 --> 00:09:44,000
门槛它将被简单地裁剪为

242
00:09:44,000 --> 00:09:46,320
这将导致一块扁平的煎饼

243
00:09:46,320 --> 00:09:48,480
到处都是色调的变化

244
00:09:48,480 --> 00:09:50,560
它也很好地匹配了

245
00:09:50,560 --> 00:09:52,640
在我们能看到的中心被剪下

246
00:09:52,640 --> 00:09:54,320
用这个小传感器预览一下

247
00:09:54,320 --> 00:09:57,600
剪辑预览按钮

248
00:09:58,720 --> 00:10:00,560
如果我们在以后减少接触

249
00:10:00,560 --> 00:10:02,720
这条管道

250
00:10:02,720 --> 00:10:04,640
我们将看到它不会对

251
00:10:04,640 --> 00:10:06,000
剪裁区域

252
00:10:06,000 --> 00:10:09,360
它只会变得更暗

253
00:10:09,760 --> 00:10:12,480
下一个更明智的选择是

254
00:10:12,480 --> 00:10:16,240
重建LCH

255
00:10:16,240 --> 00:10:18,240
它将尝试恢复一些

256
00:10:18,240 --> 00:10:20,480
来自剩余的未剪裁的

257
00:10:20,480 --> 00:10:22,880
它在渠道中是更好的选择

258
00:10:22,880 --> 00:10:25,279
我的看法是 即使重建的

259
00:10:25,279 --> 00:10:28,000
高亮显示不包含任何颜色信息

260
00:10:28,000 --> 00:10:30,079
我们可以恢复我们可以处理的数据

261
00:10:30,079 --> 00:10:32,880
如果我现在减少接触

262
00:10:32,880 --> 00:10:34,800
你会看到我们设法恢复了

263
00:10:34,800 --> 00:10:37,920
有些细节我更喜欢我的设置

264
00:10:37,920 --> 00:10:41,360
在我需要时执行EXR导出

265
00:10:41,360 --> 00:10:44,560
倒数第二个是重建颜色

266
00:10:44,560 --> 00:10:46,240
这给出了类似于

267
00:10:46,240 --> 00:10:48,399
在LCH中重建

268
00:10:48,399 --> 00:10:50,160
而是根据以下条件获得价值

269
00:10:50,160 --> 00:10:52,880
周围地区你会有一些概念

270
00:10:52,880 --> 00:10:56,880
颜色背面 但结果并不总是

271
00:10:56,880 --> 00:10:58,079
稳定

272
00:10:58,079 --> 00:11:01,440
最后一个是被引导的拉普拉斯人吧

273
00:11:01,440 --> 00:11:03,680
是世界上资源最密集的

274
00:11:03,680 --> 00:11:05,839
但从理论上讲 它应该产生最好的

275
00:11:05,839 --> 00:11:08,640
结果 但应保留为

276
00:11:08,640 --> 00:11:11,040
如果你没有很大的面积

277
00:11:11,040 --> 00:11:13,279
在感应器上被夹住

278
00:11:13,279 --> 00:11:16,240
否则效果不是很好 

279
00:11:16,240 --> 00:11:18,240
好的 这是我所有的材料 

280
00:11:18,240 --> 00:11:20,079
为你准备了今天 我希望你能找到

281
00:11:20,079 --> 00:11:21,920
这很有用 希望你已经学到了

282
00:11:21,920 --> 00:11:24,720
今天有一些新的东西 所以很快就会看到你

283
00:11:24,720 --> 00:11:27,720
再见

284
00:11:31,440 --> 00:11:33,519
你

